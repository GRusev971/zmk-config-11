#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define NUMBER 1
#define SYMBOL 2
#define SETTINGS 3
#define COMBO_TIMEOUT 50

/ {
    combos {
        compatible = "zmk,combos";

        // Meta combos

        meta_settings_combo {
            timeout-ms = <50>;
            key-positions = <39 38>;
            bindings = <&tog 1>;
        };

        // Letter combos

        backspc {
            bindings = <&kp BACKSPACE>;
            key-positions = <34 35>;
            layers = <0>;
        };

        ent {
            bindings = <&kp ENTER>;
            key-positions = <33 34>;
            layers = <0>;
        };

        gui {
            bindings = <&kp LEFT_GUI>;
            key-positions = <30 31 32>;
            layers = <0>;
        };

        bcs {
            bindings = <&kp BACKSPACE>;
            key-positions = <34 35>;
            layers = <0 2>;
        };

        btset0 {
            bindings = <&tog 3>;
            key-positions = <0 1 2 7 8 9>;
            layers = <0>;
        };
    };

    behaviors {
        mod0_tsp: mod0_tsp {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD0_TSP";
            bindings = <&lt>, <&mo>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <39>;
            tapping-term-ms = <10>;
            flavor = "tap-preferred";
        };

        tap_mo: tap_mo {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_MO";
            #binding-cells = <0>;
            tapping-term-ms = <100>;
            bindings = <&mo 2>, <&mo 1>;
        };

        new_behavior: new_behavior {
            compatible = "zmk,behavior-hold-tap";
            label = "NEW_BEHAVIOR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <10>;
            quick-tap-ms = <5>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q      &kp W      &kp E     &kp R    &kp T      &kp Y      &kp U    &kp I      &kp O      &kp P
&kp A      &kp S      &kp D     &kp F    &kp G      &kp H      &kp J    &kp K      &kp L      &kp SEMI
&kp Z      &kp X      &kp C     &kp V    &kp B      &kp N      &kp M    &kp COMMA  &kp DOT    &kp SLASH
&kp LSHFT  &kp LCTRL  &kp LALT  &kp ESC  &kp SPACE  &kp ENTER  &kp TAB  &kp RALT   &kp RCTRL  &mo 1
            >;
        };

        settings_layer {
            bindings = <
&kp N1  &kp N2  &kp N3  &kp N4   &kp N5   &kp N6   &kp N7     &kp N8     &kp N9            &kp N0
&kp F1  &kp F2  &kp F3  &kp F4   &kp F5   &kp F6   &kp MINUS  &kp EQUAL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12  &none      &kp GRAVE  &kp SQT           &kp BACKSLASH
&tog 0  &tog 1  &tog 2  &none    &none    &none    &none      &none      &kp LEFT_SHIFT    &mo 1
            >;
        };

        wow {
            bindings = <
&mt LS(N1) NUMBER_1  &mt LS(NUMBER_2) NUMBER_2  &mt LS(N3) NUMBER_3  &mt LS(N4) LS(NUMBER_4)  &mt LS(N5) N5  &mt LS(N6) NUMBER_6  &kp N7   &kp N8  &kp N9  &kp N0
&mt LS(Q) Q          &kp W                      &mt LS(E) E          &mt LS(R) R              &kp T          &kp Y                &kp U    &kp I   &kp O   &kp P
&kp A                &kp S                      &kp D                &mt LS(F) F              &kp G          &kp H                &kp J    &kp K   &kp L   &kp FSLH
&kp LEFT_CONTROL     &kp LEFT_ALT               &kp LEFT_SHIFT       &kp ESC                  &kp SPACE      &kp RET              &kp TAB  &none   &none   &mo 1
            >;
        };

        layer_3 {
            bindings = <
&bt BT_SEL 0  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&bootloader   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &mo 1
            >;
        };
    };
};
